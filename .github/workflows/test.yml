name: Tests

on:
    push:
    pull_request:
        branches:
            - main
            - dev
    merge_group:

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:

  tests:
    runs-on: macos-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    env:
      # Configure a constant location for the uv cache
      UV_CACHE_DIR: /tmp/.uv-cache

    steps:
    - name: Checkout code
      uses: actions/checkout@v4


    - name: Install uv
      uses: astral-sh/setup-uv@v6.4.3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Restore uv cache
      uses: actions/cache@v4
      with:
        path: /tmp/.uv-cache
        key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          uv-${{ runner.os }}

    - name: Install the project
      run: uv sync  --extra all --frozen


    - name: Run tests
      run: uv run --frozen pytest -n auto --cov-report "xml:coverage.xml" --cov=src --durations=0 -x tests/
      env:
        SKIP_IO_TESTS: false

    - name: Pytest coverage comment
      if: github.event_name == 'pull_request'
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-xml-coverage-path: ./coverage.xml
        report-only-changed-files: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Minimize uv cache
      run: uv cache prune --ci
